FROM python:3.12-slim

# 设置环境变量
ENV NACOS_HOME=/opt/nacos
ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
ENV PATH=$PATH:$JAVA_HOME/bin:$NACOS_HOME/bin

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    wget \
    unzip \
    jq \
    openjdk-8-jdk \
    procps \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# 复制Python代码
COPY src/python .

# 下载最新版本的Nacos Server
RUN echo "Fetching latest Nacos release..." && \
    LATEST_RELEASE=$(curl -s https://api.github.com/repos/alibaba/nacos/releases/latest | jq -r '.tag_name') && \
    echo "Latest Nacos version: $LATEST_RELEASE" && \
    NACOS_DOWNLOAD_URL="https://github.com/alibaba/nacos/releases/download/${LATEST_RELEASE}/nacos-server-${LATEST_RELEASE}.tar.gz" && \
    echo "Download URL: $NACOS_DOWNLOAD_URL" && \
    wget -O /tmp/nacos-server.tar.gz "$NACOS_DOWNLOAD_URL" && \
    mkdir -p $NACOS_HOME && \
    tar -xzf /tmp/nacos-server.tar.gz -C /tmp && \
    mv /tmp/nacos/* $NACOS_HOME/ && \
    rm -rf /tmp/nacos-server.tar.gz /tmp/nacos && \
    chmod +x $NACOS_HOME/bin/*.sh && \
    echo $LATEST_RELEASE > $NACOS_HOME/VERSION

# 创建Nacos数据目录
RUN mkdir -p $NACOS_HOME/data $NACOS_HOME/logs

# 准备ChromaDB模型文件
RUN mkdir -p /root/.cache/chroma/onnx_models/all-MiniLM-L6-v2/ && \
    curl -v https://chroma-onnx-models.s3.amazonaws.com/all-MiniLM-L6-v2/onnx.tar.gz \
    -o /root/.cache/chroma/onnx_models/all-MiniLM-L6-v2/onnx.tar.gz

# 安装Python依赖
RUN pip install --no-cache-dir .

# 创建启动脚本
RUN cat > /app/start.sh << 'EOF'
#!/bin/bash
set -e

# 获取Nacos版本
NACOS_VERSION=$(cat $NACOS_HOME/VERSION 2>/dev/null || echo "unknown")

# 默认环境变量
export MODE=${MODE:-standalone}
export NACOS_AUTH_TOKEN=${NACOS_AUTH_TOKEN:-VGhpc0lzTXlTZWNyZXRLZXlGb3JOYWNvc01DUFJvdXRlcjEyMzQ1Njc4OTA=}
export NACOS_AUTH_IDENTITY_KEY=${NACOS_AUTH_IDENTITY_KEY:-nacos-server-identity}
export NACOS_AUTH_IDENTITY_VALUE=${NACOS_AUTH_IDENTITY_VALUE:-nacos-server-value}
export NACOS_AUTH_ENABLE=${NACOS_AUTH_ENABLE:-true}
export SPRING_SECURITY_ENABLED=${SPRING_SECURITY_ENABLED:-true}
export NACOS_PASSWORD=${NACOS_PASSWORD:-nacos}

# Router环境变量
export NACOS_ADDR=${NACOS_ADDR:-127.0.0.1:8848}
export NACOS_USERNAME=${NACOS_USERNAME:-nacos}
export TRANSPORT_TYPE=${TRANSPORT_TYPE:-stdio}
export ROUTER_MODE=${ROUTER_MODE:-router}

echo "========================================"
echo "🚀 Starting Nacos MCP Router Container"
echo "========================================"
echo "📦 Nacos Version: $NACOS_VERSION"
echo "🔧 Nacos Mode: $MODE"
echo "🔀 Router Mode: $ROUTER_MODE"
echo "📡 Transport Type: $TRANSPORT_TYPE"
echo "========================================"

# 启动Nacos Server
echo "🔄 Starting Nacos Server..."
cd $NACOS_HOME

# 确保日志目录存在
mkdir -p logs

# 启动Nacos
nohup sh bin/startup.sh -m $MODE > logs/nacos-startup.log 2>&1 &
NACOS_PID=$!

echo "📝 Nacos started with PID: $NACOS_PID"
echo "⏳ Waiting for Nacos to be ready..."

# 等待Nacos启动完成
max_attempts=60
attempt=0
while [ $attempt -lt $max_attempts ]; do
    if curl -f -s http://localhost:8848/nacos/actuator/health >/dev/null 2>&1; then
        echo "✅ Nacos is ready!"
        break
    fi
    echo "⏳ Attempt $((attempt+1))/$max_attempts: Nacos not ready yet, waiting..."
    
    # 每10次尝试输出一次日志片段
    if [ $((attempt % 10)) -eq 0 ] && [ $attempt -gt 0 ]; then
        echo "📋 Recent Nacos log:"
        tail -5 logs/nacos-startup.log 2>/dev/null || echo "No log available yet"
    fi
    
    sleep 5
    attempt=$((attempt+1))
done

if [ $attempt -eq $max_attempts ]; then
    echo "❌ Nacos failed to start within expected time"
    echo "=== 📋 Nacos startup log ==="
    cat logs/nacos-startup.log 2>/dev/null || echo "No log file found"
    echo "========================="
    
    # 检查Java进程
    echo "=== 🔍 Process status ==="
    ps aux | grep java || echo "No Java processes found"
    echo "========================="
    
    exit 1
fi

# 验证Nacos服务
echo "🔍 Verifying Nacos services..."
curl -s http://localhost:8848/nacos/actuator/health | jq . 2>/dev/null || echo "Health check response received"

# 显示Nacos信息
echo "========================================"
echo "✅ Nacos Server is ready!"
echo "🌐 Console: http://localhost:8848/nacos"
echo "👤 Username: nacos"
echo "🔑 Password: $NACOS_PASSWORD"
echo "========================================"

# 启动Router
echo "🔄 Starting nacos-mcp-router..."
cd /app

# 最后检查一次Nacos状态
if ! curl -f -s http://localhost:8848/nacos/actuator/health >/dev/null 2>&1; then
    echo "❌ Nacos health check failed before starting router"
    exit 1
fi

echo "🚀 Starting Router with config:"
echo "   NACOS_ADDR: $NACOS_ADDR"
echo "   NACOS_USERNAME: $NACOS_USERNAME"
echo "   TRANSPORT_TYPE: $TRANSPORT_TYPE"
echo "   MODE: $ROUTER_MODE"

exec python -m nacos_mcp_router
EOF

# 给启动脚本执行权限
RUN chmod +x /app/start.sh

# 暴露端口
EXPOSE 8080 8848 9848 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:8848/nacos/actuator/health || exit 1

# 设置工作目录
WORKDIR /app

# 启动服务
CMD ["/app/start.sh"] 