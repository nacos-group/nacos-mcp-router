1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "nacos-mcp-router.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "nacos-mcp-router.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "nacos-mcp-router.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.nacosConsolePort }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nacos-mcp-router.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to access the Nacos console"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:8080
{{- end }}

2. Nacos Console Access:
   - Default username: nacos
   - Default password: {{ .Values.nacos.adminPassword }}
   - Console URL: http://localhost:8080/nacos (when using port-forward)

3. nacos-mcp-router Configuration:
   - Mode: {{ .Values.router.mode }}
   - Transport Type: {{ .Values.router.transportType }}
   - Nacos Address: {{ .Values.router.nacos.addr }}
   {{- if eq .Values.router.mode "proxy" }}
   - Proxied MCP Name: {{ .Values.router.proxy.mcpName }}
   {{- end }}

4. To check the status of your deployment:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nacos-mcp-router.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

5. To view logs:
   # Nacos logs
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nacos-mcp-router.name" . }}" -c nacos
   
   # Router logs  
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nacos-mcp-router.name" . }}" -c router

6. MCP Router Tools Available:
   - search_mcp_server: Search for MCP servers by task description and keywords
   - add_mcp_server: Install and initialize a MCP server
   - use_tool: Proxy calls to other MCP server tools

{{- if .Values.router.transportType | eq "stdio" }}
Note: Router is running in stdio mode. It will communicate via standard input/output.
{{- else if or (.Values.router.transportType | eq "sse") (.Values.router.transportType | eq "streamable_http") }}
Router HTTP endpoint will be available on port {{ .Values.router.port }}.
{{- end }} 